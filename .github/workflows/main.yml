# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
env:
  IMAGE_NAME: registry.cn-hangzhou.aliyuncs.com/luck-walunt/blog #
  IMAGE_TAG: production
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: pull repo
        uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: 安装Npm包 并打包
        run: yarn install &&  yarn docs:build && ls
      - name: Copy nginx.conf and Dockerfile to dist
        run: ls && cp nginx.conf Dockerfile  docs/.vuepress/dist && cd docs/.vuepress/dist && ls
      - name: Login To Docker #登录到镜像仓库
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.ALIYUN_DOCKER_IMAGESTORE_USERNAME }}
          password: ${{ secrets.ALIYUN_DOCKER_IMAGESTORE_PASSWORD }}
          registry: ${{env.IMAGE_NAME}} #镜像仓库地址
      - name: Build Docker Image # Build Docker镜像并推送到镜像仓库
        uses: docker/build-push-action@v2
        with:
          tags: ${{env.IMAGE_NAME}}:${{env.IMAGE_TAG}}.${{ github.run_number }} #动态变量镜像TAG 使用github运行job和jobid设置tag
          context: /home/runner/work/luck.blog/luck.blog/docs/.vuepress/dist
          file: /home/runner/work/luck.blog/luck.blog/docs/.vuepress/dist/Dockerfile # 指定Dockerfile
          push: true
      - name: replace image tag
        uses: datamonsters/replace-action@v2
        with:
          files: 'k8sdeploy/deployment-service.yaml'
          replacements: '$IMAGE_TAG=${{env.IMAGE_TAG}}.${{ github.run_number }}'
      - uses: actions-hub/kubectl@master
        name: deploy to k8s
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
        with:
          args: apply -f k8sdeploy/deployment-service.yaml
