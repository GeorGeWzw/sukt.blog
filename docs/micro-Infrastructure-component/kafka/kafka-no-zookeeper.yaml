apiVersion: apps/v1
kind: StatefulSet
metadata:
  namespace: luck-infrastructure
  name: kafka
spec:
  selector:
    matchLabels:
      app: kafka
  serviceName: kafka-headless
  replicas: 3
  template:
    metadata:
      labels:
        app: kafka
    spec:
      containers:
      - name: kafka
        image: confluentinc/cp-kafka:7.0.0
        env:
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: yes
        # - name: KAFKA_ENABLE_KRAFT
        #   value: yes
        # - name: KAFKA_CFG_PROCESS_ROLES
        #   value: "broker,controller"
        # - name: KAFKA_CFG_CONTROLLER_LISTENER_NAMES
        #   value: "CONTROLLER"
        # - name: KAFKA_CFG_CONTROLLER_LISTENER_NAMES
        #   value: "CONTROLLER"
        # - name: KAFKA_CFG_CONTROLLER_LISTENER_NAMES
        #   value: "CONTROLLER"
        # - name: KAFKA_CFG_CONTROLLER_LISTENER_NAMES
        #   value: "CONTROLLER"
        ports:
        - containerPort: 9092
          name: kafka
        volumeMounts:
        - name: kafka-volume
          mountPath: /var/lib/kafka
  volumeClaimTemplates:
    - metadata:
        name: kafka-volume
      spec:
        accessModes:
          - ReadWriteOnce
        storageClassName: luck-kafka-nfs-csi
        resources:
          requests:
            storage: 10Gi
  updateStrategy:
    type: RollingUpdate
  
---
apiVersion: v1
kind: Service
metadata:
  namespace: luck-infrastructure
  name: kafka-headless
spec:
  clusterIP: None
  selector:
    app: kafka
  ports:
    - port: 9092
      targetPort: 3011
      name: kafka